module Sixten.Builtin exposing (..)

type Bool = False | True

abstract
UnsolvedConstraint : (T : Type) -> T
UnsolvedConstraint T = UnsolvedConstraint T

abstract
eqInt : Int -> Int -> Bool
eqInt x y = (C|
  return $x == $y ? $True : $False;
|)

abstract
addInt : Int -> Int -> Int
addInt x y = (C|
  return $x + $y;
|)

abstract
subInt : Int -> Int -> Int
subInt x y = (C|
  return $x - $y;
|)

abstract
maxInt : Int -> Int -> Int
maxInt x y = (C|
  return $x > $y ? $x : $y;
|)

abstract
printInt : Int -> Int
printInt x = (C|
  printf("%" PRId64 "\n", $x);
  return 0;
|)

abstract
fail : (T : Type) -> T
fail _ = (C|
  exit(1);
|)

abstract
sizeOf : Type -> Int
sizeOf T = (C| return $T; |)

abstract
MkType : Int -> Type
MkType i = (C| return $i; |)

abstract
productTypeRep : Type -> Type -> Type
productTypeRep S T = MkType (addInt (sizeOf S) (sizeOf T))

abstract
sumTypeRep : Type -> Type -> Type
sumTypeRep S T = MkType (maxInt (sizeOf S) (sizeOf T))
